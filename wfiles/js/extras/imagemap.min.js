/*! Image Map Resizer
 *  Desc: Resize HTML imageMap to scaled image.
 *  Copyright: (c) 2014-15 David J. Bradshaw - dave@bradshaw.net
 *  License: MIT
 */
(function(){'use strict';function scaleImageMap(){function resizeMap(){function resizeAreaTag(cachedAreaCoords,idx){function scale(coord){var dimension=(1===(isWidth=1-isWidth)?'width':'height');return Math.floor(Number(coord)*scallingFactor[dimension])}
var isWidth=0;areas[idx].coords=cachedAreaCoords.split(',').map(scale).join(',')}
var scallingFactor={width:image.width/image.naturalWidth,height:image.height/image.naturalHeight};cachedAreaCoordsArray.forEach(resizeAreaTag)}
function getCoords(e){return e.coords.replace(/ *, */g,',').replace(/ +/g,',')}
function debounce(){clearTimeout(timer);timer=setTimeout(resizeMap,250)}
function start(){if((image.width!==image.naturalWidth)||(image.height!==image.naturalHeight)){resizeMap()}}
function addEventListeners(){image.addEventListener('onload',resizeMap,!1);window.addEventListener('focus',resizeMap,!1);window.addEventListener('resize',debounce,!1);document.addEventListener('fullscreenchange',resizeMap,!1)}
function beenHere(){return('function'===typeof map._resize)}
function setup(){areas=map.getElementsByTagName('area');cachedAreaCoordsArray=Array.prototype.map.call(areas,getCoords);image=document.querySelector('img[usemap="#'+map.name+'"]');map._resize=resizeMap}
var map=this,areas=null,cachedAreaCoordsArray=null,image=null,timer=null;if(!beenHere()){setup();addEventListeners();start()}else{map._resize()}}
function factory(){function init(element){if(!element.tagName){throw new TypeError('Object is not a valid DOM element')}else if('MAP'!==element.tagName.toUpperCase()){throw new TypeError('Expected <MAP> tag, found <'+element.tagName+'>.')}
scaleImageMap.call(element)}
return function imageMapResizeF(target){switch(typeof(target)){case 'undefined':case 'string':Array.prototype.forEach.call(document.querySelectorAll(target||'map'),init);break;case 'object':init(target);break;default:throw new TypeError('Unexpected data type ('+typeof target+').')}}}
if(typeof define==='function'&&define.amd){define([],factory)}else if(typeof module==='object'&&typeof module.exports==='object'){module.exports=factory()}else{window.imageMapResize=factory()}
if('jQuery' in window){jQuery.fn.imageMapResize=function $imageMapResizeF(){return this.filter('map').each(scaleImageMap).end()}}})();